# Apparently this is already set in the image.
# daemon off;

events {
    worker_connections 1024;
}

http {
    # Since nginx is serving the static files, and not the Observable Framework
    # development web server, we need to tell nginx what types to expect.
    types {
        text/html              html;
        text/css               css;
        image/gif              gif;
        image/jpeg             jpeg jpg;
        image/png              png;
        image/svg+xml          svg svgz;
        application/javascript js;
        application/wasm       wasm;
    }

    server {
        listen 8080;
        server_name localhost;
        sendfile on;
        sendfile_max_chunk 1m;

        # Fake a user in development. See:
        # - https://cloud.google.com/iap/docs/identity-howto#getting_the_users_identity_with_signed_headers
        proxy_set_header X-Goog-Authenticated-User-Email accounts.google.com:foo@bar.com;

        # The Observale Framework application is built as a static site with
        # files mounted on ./dist.
        location / {
            auth_request /validator;

            try_files $uri $uri.html =404;
            rewrite ^/$ /index.html break;

            root /usr/share/nginx/html;
        }

        # API requests are rooted in /api and passed through to the backend
        # application.
        location ~* ^/api/ {
            auth_request /validator;

            proxy_pass http://backend:8082;
        }

        # The validator runs as a separate container.
        location = /validator {
            proxy_pass http://validator:8081;
        }
    }
}
