daemon off;
error_log stderr;

events {
    worker_connections 1024;
}

http {
    server {
        listen 6080;
        server_name localhost;

        # Fake a user in development. See:
        # - https://cloud.google.com/iap/docs/identity-howto#getting_the_users_identity_with_signed_headers
        proxy_set_header X-Goog-Authenticated-User-Email accounts.google.com:foo@bar.com;

        # Pass Observable Framework requests to the Observable Framework
        # server.
        location / {
            auth_request /validator;

            proxy_pass http://127.0.0.1:6081;
        }

        # Pass through the web socket connection Observable Framework uses for
        # frontend live reloading too.
        location /_observablehq {
            auth_request /validator;

            proxy_pass http://127.0.0.1:6081;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        # Pass through calls to the backend application.
        location ~* ^/api/ {
            auth_request /validator;

            proxy_pass http://127.0.0.1:6082;
        }

        # Fake the validator in development.
        location = /validator {
            return 204;
        }
    }
}
